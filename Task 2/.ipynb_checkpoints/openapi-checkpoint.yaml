swagger: "2.0"
info:
  version: "1.0.0"
  title: Carpark API
basePath: /api
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /carparks:
    get:
      summary: Retrieve all available carparks
      description: Retrieves a list of all available carparks and their details.
      responses:
        200:
          description: Successful operation. Returns a list of carparks.
  /carparks/{carpark_id}:
    get:
      summary: Retrieve details of a specific carpark
      description: Retrieves details of a specific carpark by its ID.
      parameters:
        - name: carpark_id
          in: path
          description: ID of the carpark to retrieve
          required: true
          type: string
      responses:
        200:
          description: Successful operation. Returns details of the carpark.
  /carparks/search:
    get:
      summary: Search for carparks
      description: Searches for carparks based on user-provided criteria (e.g., location, availability).
      parameters:
        - name: criteria
          in: query
          description: User-provided search criteria
          required: true
          type: string
      responses:
        200:
          description: Successful operation. Returns a list of matching carparks.
  /carparks/reservations:
    get:
      summary: Retrieve user's reservations
      description: Retrieves a list of all reservations made by the user.
      responses:
        200:
          description: Successful operation. Returns a list of reservations.
    post:
      summary: Create a reservation
      description: Creates a new reservation for a parking lot.
      responses:
        201:
          description: Successfully created reservation.
  /carparks/reservations/{reservation_id}:
    get:
      summary: Retrieve details of a specific reservation
      description: Retrieves details of a specific reservation by its ID.
      parameters:
        - name: reservation_id
          in: path
          description: ID of the reservation to retrieve
          required: true
          type: string
      responses:
        200:
          description: Successful operation. Returns details of the reservation.
    put:
      summary: Update a reservation
      description: Updates details of a specific reservation (e.g., extend reservation duration).
      parameters:
        - name: reservation_id
          in: path
          description: ID of the reservation to update
          required: true
          type: string
      responses:
        200:
          description: Successfully updated reservation.
    delete:
      summary: Cancel a reservation
      description: Cancels a specific reservation by its ID.
      parameters:
        - name: reservation_id
          in: path
          description: ID of the reservation to cancel
          required: true
          type: string
      responses:
        204:
          description: Reservation successfully canceled.
